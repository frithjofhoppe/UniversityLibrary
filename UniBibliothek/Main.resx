<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        NVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3X
        lFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVV
        Rg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHD
        RSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1J
        ldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXU
        cE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxT
        UmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZ
        NVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3X
        lFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVV
        Rg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHD
        RSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1J
        ldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXU
        cE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxT
        UmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZ
        NVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3X
        lFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVV
        Rg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHD
        RSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1J
        ldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXU
        cE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxT
        UmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZ
        NVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3X
        lFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVVRg3XlFQZNVxTUmXUcE1JldHDRSVV
        Rg3XlFQZNVxTUmXUcE1JlQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV+HLr968t/0BBIh4
        KN/T6fxy5skfbQ6GiMfyI53OL2ee/NnmYIh4LD/T6fxy5slfbw6GiMfya53OL2OeyP0/4jl8+RxgnsT9
        P+I5fPkcYJ7E/T/iOXz5HGCexP0/4jl82RxgnsD9P+K5fP4cYB7M/T/iuXz+HGAezP0/4rl8/hxgHsz9
        P+K5fN4cYB7I/T/iOX16DjAP4v4f8Zw+PQeYB3H/j3hOn54DzIO4/0c8pz8+B5gHcP+PeG5/eA4w7+T+
        H/Hc/vAcYN7J/T/iuf3hOcC8k/t/xHPr5wDzDu7/Ea/hu3OAeSP3/4jX8N05wLyR+3/Ea/juHGDeyP0/
        4jX8/hxg3sD9P+K1/HYOMH/h/h/xWn47B5i/cP+PeC2/nQPMX7j/R7yW/58DzB+4/0e8pu9x/494XT/i
        /h/xun7G/T/iZX3z9f8A4mKphrNVTdwAAAAASUVORK5CYII=
</value>
  </data>
</root>